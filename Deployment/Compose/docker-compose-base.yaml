# This compose setup is only meant for local development of Misago itself
# This is not for running your Misago site in docker
version: "3.0"
services:

  postgres:
    image: postgres:10
    restart: unless-stopped
    environment:
      - POSTGRES_USER=misago
      - POSTGRES_PASSWORD=misago
      - POSTGRES_DB=misago
      - INFLUX_DB_LOCATION=http://10.5.0.109:8086
      - INFLUX_DB_NAME=telegraf
      - HOST_MONITORING_TAG=postgres1-
      
      
  redis:
    image: redis:5
    restart: unless-stopped

  misago:
    image: misago_app
    environment:
      # Postgres
      - POSTGRES_USER=misago
      - POSTGRES_PASSWORD=misago
      - POSTGRES_DB=misago
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_TEST_DB=misago_test
      # Superuser
      - SUPERUSER_USERNAME=Admin
      - SUPERUSER_EMAIL=admin@example.com
      - SUPERUSER_PASSWORD=password
      # REDIS
      - REDIS_HOST=redis-proxy
      - REDIS_PORT=6379
      - REDIS_PASSWORD=str0ng_passw0rd1
    ports:
      # Map port 8000 in the container to port 8000 on the host
      # This way we can access the forum through http://localhost:8000
      - "6361:80"
    depends_on:
      - postgres
      - redis
    tty: true
    volumes:
      # Map in the entire project into the container
      # This makes sure files in the container updates on the fly as we were working locally
      - ../misago_app:/srv/misago:rw

  web:
    image: misago_web
    ports:
      - "6360:80"
      #- "1112:443"
    environment:
      # use app service's hostname
      - APP_HOST=misago
      # talk to the port within the overlay network
      # without (over)exposing ports
      - APP_PORT_NUMBER=80
      #- NAME={{.service}}
      - INFLUX_DB_LOCATION=http://10.5.0.109:8086
      - INFLUX_DB_NAME=telegraf
      - HOST_MONITORING_TAG=nginx-
      # ELK
      - ELASTIC_SEARCH_HOSTS=["10.5.0.109:9200"]
    depends_on:
      - misago
    #read_only: true
    #restart: unless-stopped
    # Uncomment for SSL
    # environment:
    #  - MATTERMOST_ENABLE_SSL=true
    volumes:
      # Map in the entire project into the container
      # This makes sure files in the container updates on the fly as we were working locally
      - ../misago_app/devproject/static:/static:rw

  #celery:
  #  build: ./celeryDocker
  #  command: celery -A devproject worker --loglevel=info
  #  environment:
  #    # Postgres
  #    - POSTGRES_USER=misago
  #    - POSTGRES_PASSWORD=misago
  #    - POSTGRES_DB=misago
  #    - POSTGRES_HOST=postgres
  #    - POSTGRES_TEST_DB=misago_test
  #  depends_on:
  #    - postgres
  #    - redis
  #  tty: true
  #  volumes:
  #    # Map in the entire project into the container
  #    # This makes sure files in the container updates on the fly as we were working locally
  #    - ./celeryDocker:/srv/misago:Z
  
