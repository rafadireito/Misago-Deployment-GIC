# This compose setup is only meant for local development of Misago itself
# This is not for running your Misago site in docker
version: "3.0"
services:
  
  redis:
    image: redis:5
    restart: unless-stopped

  misago:
    image: misago_app
    environment:
      # Postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pgpool_postgres_password_secret
      - POSTGRES_DB=mattermost
      - POSTGRES_HOST=pgpool
      - POSTGRES_PORT=5432
      - POSTGRES_TEST_DB=misago_test
      # Superuser
      - SUPERUSER_USERNAME=Admin
      - SUPERUSER_EMAIL=admin@example.com
      - SUPERUSER_PASSWORD=password
      # REDIS
      - REDIS_HOST=redis-proxy
      - REDIS_PORT=6379
      - REDIS_PASSWORD=str0ng_passw0rd
    ports:
      # Map port 8000 in the container to port 8000 on the host
      # This way we can access the forum through http://localhost:8000
      - "6361:80"
    depends_on:
      - pgpool
      - redis-proxy
    tty: true
    volumes:
      # Map in the entire project into the container
      # This makes sure files in the container updates on the fly as we were working locally
      - ../misago_app:/srv/misago:rw
      #- /nfs/misago_RD/misago_app/:/srv/misago:rw

  web:
    image: misago_web
    ports:
      - "6360:80"
      #- "1112:443"
    environment:
      # use app service's hostname
      - APP_HOST=misago
      # talk to the port within the overlay network
      # without (over)exposing ports
      - APP_PORT_NUMBER=80
      #- NAME={{.service}}
      - INFLUX_DB_LOCATION=http://10.5.0.109:8086
      - INFLUX_DB_NAME=telegraf
      - HOST_MONITORING_TAG=nginx
    depends_on:
      - misago
    #read_only: true
    #restart: unless-stopped
    # Uncomment for SSL
    # environment:
    #  - MATTERMOST_ENABLE_SSL=true
    volumes:
      # Map in the entire project into the container
      # This makes sure files in the container updates on the fly as we were working locally
      - ../misago_app/:/misago_app:rw
      #- /nfs/misago_RD/misago_app/devproject/static:/static:rw

  pg-0:
    image: bitnami/postgresql-repmgr:11.7.0
    #networks:
    #  - mm-in
    #volumes:
    #  - /nfs/mattermost/mattermost-84921-85098-pg-replica-0:/bitnami/postgresql
    environment:
      # Postgres administrator to access this node
      - POSTGRESQL_POSTGRES_PASSWORD=pgpool_postgres_password_secret
        # About the database
      - POSTGRESQL_USERNAME=mmuser
      - POSTGRESQL_PASSWORD=postgresql_password
      - POSTGRESQL_DATABASE=mattermost
      # Infos about replication
      - REPMGR_PASSWORD=postgresql_password
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1,pg-2
      # Infos about this node
      - REPMGR_NODE_NAME=pg-0
      - REPMGR_NODE_NETWORK_NAME=pg-0
    #secrets:
    #  - pgpool_postgres_password_secret
    #  - postgresql_password

  pg-1:
    image:  bitnami/postgresql-repmgr:11.7.0
    #networks:
    #  - mm-in
    #volumes:
    #  - /nfs/mattermost/mattermost-84921-85098-pg-replica-1:/bitnami/postgresql
    environment:
      # Postgres administrator to access this node
      - POSTGRESQL_POSTGRES_PASSWORD=pgpool_postgres_password_secret
      # About the database
      - POSTGRESQL_USERNAME=mmuser
      - POSTGRESQL_PASSWORD=postgresql_password
      - POSTGRESQL_DATABASE=mattermost
      # Infos about replication
      - REPMGR_PASSWORD=postgresql_password
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1,pg-2
      # Infos about this node
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1   
    #secrets:
    #  - pgpool_postgres_password_secret
    #  - postgresql_password

  pg-2:
    image: bitnami/postgresql-repmgr:11.7.0
    #networks:
    #  - mm-in
    #volumes:
    #  - /nfs/mattermost/mattermost-84921-85098-pg-replica-2:/bitnami/postgresql
    environment:
      # Postgres administrator to access this node
      - POSTGRESQL_POSTGRES_PASSWORD=pgpool_postgres_password_secret
      # About the database
      - POSTGRESQL_USERNAME=mmuser
      - POSTGRESQL_PASSWORD=postgresql_password
      - POSTGRESQL_DATABASE=mattermost
      # Infos about replication
      - REPMGR_PASSWORD=postgresql_password
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1,pg-2
      # Infos about this node
      - REPMGR_NODE_NAME=pg-2
      - REPMGR_NODE_NETWORK_NAME=pg-2

  pgpool:
    image: bitnami/pgpool:4.1.1
    #networks:
    #  - mm-in
    ports:
      - "6362:5432"
    environment:
      # Comma separated list of backend nodes in the cluster.
      - PGPOOL_BACKEND_NODES=0:pg-0:5432,1:pg-1:5432,2:pg-2:5432
      # Information for perfoming streaming checks.
      - PGPOOL_SR_CHECK_USER=mmuser
      - PGPOOL_SR_CHECK_PASSWORD=postgresql_password
      # Whether to enable LDAP authentication.
      - PGPOOL_ENABLE_LDAP=no
      # Postgres administrator credentials, this will be use to allow postgres admin authentication through Pgpool.
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=pgpool_postgres_password_secret
      # Credentials for the pgpool administrator
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=pgpool_postgres_password_secret
      # Load balancing
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
    depends_on:
      - pg-0
      - pg-1
      - pg-2
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
    #deploy:
    #  replicas: 3
  
  redis-master:
    image: 'bitnami/redis:latest'
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=str0ng_passw0rd
    ports:
      - '6363:6379'

  redis-slave-1:
    image: 'bitnami/redis:latest'
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
      - REDIS_MASTER_PASSWORD=str0ng_passw0rd
      - REDIS_PASSWORD=str0ng_passw0rd
    ports:
      - '6364:6379'
    depends_on:
      - redis-master

  redis-slave-2:
    image: 'bitnami/redis:latest'
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
      - REDIS_MASTER_PASSWORD=str0ng_passw0rd
      - REDIS_PASSWORD=str0ng_passw0rd    
    ports:
      - '6365:6379'
    depends_on:
      - redis-master

  redis-sentinel:
    image: 'bitnami/redis-sentinel:latest'
    environment:
      - REDIS_MASTER_PASSWORD=str0ng_passw0rd
      - REDIS_MASTER_HOST=redis-master
      - MASTER=redis-master
      - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=5000
      - REDIS_SENTINEL_FAILOVER_TIMEOUT=10000
      - REDIS_SENTINEL_QUORUM=1
    depends_on:
      - redis-master
      - redis-slave-1
      - redis-slave-2
    ports:
      - '6366:26379'
  
  redis-proxy:
    build: ./redis_stuff/haproxy/1.7
    depends_on:
      - redis-slave-1
      - redis-slave-2
      - redis-master
      - redis-sentinel
    ports:
      - '6367:9000'
      - '6368:6379'
    environment:
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=password
      - REDIS_PASSWORD=str0ng_passw0rd
      - REDIS_HOSTS=redis-master, redis-slave-1, redis-slave-2
      